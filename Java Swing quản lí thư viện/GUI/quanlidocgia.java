/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.MuonSachBLL;
import BLL.DSQuaHanBLL;
import BLL.DocGiaBLL;
import DTO.DocGiaDTO;
import BLL.QuanLiDocGiaBLL;
import DTO.DSMuonSachDTO;
import DTO.DSQuaHanDTO;
import DTO.TaiKhoanDTO;
import DTO.TheThuVienDTO;
//import static QLTV.Cquanlidocgia.CheckNgayThang;
//import static QLTV.Cquanlidocgia.ChonKieuDuyet;
import DAL.Database;
import static DAL.Database.StringToInt;
import static DAL.Database.conectionJDBC;
import static DAL.Database.getData;
//import database.Mquanlidocgia;
//import static database.Mquanlidocgia.LayDocGiaHanTheoNgay;
//import static database.Mquanlidocgia.LayDocGiaHanTheoThang;
//import static database.Mquanlidocgia.LayDocGiaMuonTheoNgay;
//import static database.Mquanlidocgia.LayDocGiaMuonTheoThang;
//import static database.Mquanlidocgia.XoaDG;
//import static database.Mquanlidocgia.setDefaultDocgia;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.TimeZone;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.runtime.regexp.joni.Syntax.Java;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ADMIN
 */
public class quanlidocgia extends javax.swing.JFrame implements ActionListener, ItemListener, ListSelectionListener {

    /**
     * Creates new form quanlidocgia
     */
    Connection conn;
    public quanlidocgia() {
        initComponents();
        // this.setDefaultDocgia();
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.TextGioiTinh.setEditable(true);
        this.BSuaDocGia.setEnabled(false);
        this.CBBoxDoiTuong.addItemListener(this);
        this.BXemDocGia.addActionListener(this);
        this.BXemMuon.addActionListener(this);
        this.BXemHan.addActionListener(this);
        this.BXoaDocGia.addActionListener(this);
        this.TableDocGia.getSelectionModel().addListSelectionListener(this);
        this.BSuaDocGia.addActionListener(this);
        this.TextGioiTinh.setEditable(true);
        this.BThemDocGia.addActionListener(this);
        this.CBBoxLop.removeAllItems();
        this.CBBoxDoiTuong.removeAllItems();
        this.DateNgaySinh.setDateFormatString("dd-MM-yyyy");
        String[] doituong = {"Giao vien", "Hoc sinh"};
        String[] lop = {"10", "11", "12"};
        this.CBBoxLop.setModel(new DefaultComboBoxModel(lop));
        this.CBBoxDoiTuong.setModel(new DefaultComboBoxModel(doituong));
        this.CBBoxLop.setEnabled(false);
        this.setDefaultDocgia();
        //this.TableDocGia.setModel(setDefaultDocgia());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        RadioXemTuNgay = new javax.swing.JRadioButton();
        RadioXemThangNam = new javax.swing.JRadioButton();
        DateTuNgayMuon = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        DateDenNgayMuon = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        ChonNamMuon = new com.toedter.calendar.JYearChooser();
        BXemMuon = new javax.swing.JButton();
        ChonThangMuon = new com.toedter.calendar.JMonthChooser();
        jLabel21 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableHan = new javax.swing.JTable();
        RadioTuNgayHan = new javax.swing.JRadioButton();
        RadioThangNamHan = new javax.swing.JRadioButton();
        ChonTuNgayHan = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        ChonDenNgayHan = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        ChonNamHan = new com.toedter.calendar.JYearChooser();
        BXemHan = new javax.swing.JButton();
        ChonThangHan = new com.toedter.calendar.JMonthChooser();
        jLabel19 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableDocGia = new javax.swing.JTable();
        TextTen = new javax.swing.JTextField();
        TextGioiTinh = new javax.swing.JTextField();
        TextDiaChi = new javax.swing.JTextField();
        DateNgaySinh = new com.toedter.calendar.JDateChooser();
        TextSDT = new javax.swing.JTextField();
        BThemDocGia = new javax.swing.JButton();
        BSuaDocGia = new javax.swing.JButton();
        BXoaDocGia = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        CBBoxDoiTuong = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        CBBoxLop = new javax.swing.JComboBox<>();
        BXemDocGia = new javax.swing.JButton();
        TextEmail = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("THƯ VIỆN TRƯỜNG THPT DƯỠNG ĐIỀM");
        setMinimumSize(new java.awt.Dimension(1167, 666));

        jPanel1.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã độc giả", "Tên độc giả", "Số lượng sách đã mượn"
            }
        ));
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(130, 260, 920, 240);

        RadioXemTuNgay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RadioXemTuNgay.setText("Từ ngày ");
        jPanel1.add(RadioXemTuNgay);
        RadioXemTuNgay.setBounds(287, 99, 79, 23);

        RadioXemThangNam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RadioXemThangNam.setText("Theo tháng");
        jPanel1.add(RadioXemThangNam);
        RadioXemThangNam.setBounds(287, 151, 96, 23);

        DateTuNgayMuon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel1.add(DateTuNgayMuon);
        DateTuNgayMuon.setBounds(401, 92, 171, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Đến ngày");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(650, 90, 58, 20);

        DateDenNgayMuon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel1.add(DateDenNgayMuon);
        DateDenNgayMuon.setBounds(730, 90, 169, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Năm ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(650, 130, 58, 23);

        ChonNamMuon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel1.add(ChonNamMuon);
        ChonNamMuon.setBounds(730, 130, 118, 30);

        BXemMuon.setText("Xem thông tin");
        BXemMuon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        BXemMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BXemMuonActionPerformed(evt);
            }
        });
        jPanel1.add(BXemMuon);
        BXemMuon.setBounds(550, 190, 120, 40);

        ChonThangMuon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel1.add(ChonThangMuon);
        ChonThangMuon.setBounds(420, 140, 120, 30);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 102, 102));
        jLabel21.setText("ĐỘC GIẢ MƯỢN SÁCH");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(510, 30, 236, 29);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Bảng chi tiết");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(101, 228, 70, 16);

        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel1.add(jLabel22);
        jLabel22.setBounds(100, 250, 960, 270);

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\thuvienduongdiem_12_6_2019\\database\\src\\Icon\\shutdown.png")); // NOI18N
        jButton1.setText("Đăng xuất");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(980, 550, 113, 40);

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\thuvienduongdiem_12_6_2019\\database\\src\\Icon\\back.png")); // NOI18N
        jButton2.setText("Quay lại");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(240, 550, 110, 40);

        jLabel27.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\thuvienduongdiem_12_6_2019\\database\\src\\Icon\\2397.jpg_wh1200.jpg")); // NOI18N
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 5));
        jPanel1.add(jLabel27);
        jLabel27.setBounds(0, 0, 1210, 620);

        jTabbedPane1.addTab("Danh sách độc giả mượn sách", jPanel1);

        jPanel2.setLayout(null);

        TableHan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã thẻ", "Mã độc giả", "Tên độc giả", "Số sách quá hạn"
            }
        ));
        jScrollPane2.setViewportView(TableHan);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(170, 280, 890, 226);

        RadioTuNgayHan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RadioTuNgayHan.setText("Từ ngày");
        jPanel2.add(RadioTuNgayHan);
        RadioTuNgayHan.setBounds(280, 111, 96, 23);

        RadioThangNamHan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RadioThangNamHan.setText("Theo tháng");
        jPanel2.add(RadioThangNamHan);
        RadioThangNamHan.setBounds(280, 167, 96, 23);

        ChonTuNgayHan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel2.add(ChonTuNgayHan);
        ChonTuNgayHan.setBounds(390, 110, 164, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Đến ngày");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(640, 114, 58, 20);

        ChonDenNgayHan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel2.add(ChonDenNgayHan);
        ChonDenNgayHan.setBounds(720, 110, 168, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Năm ");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(640, 169, 58, 21);

        ChonNamHan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel2.add(ChonNamHan);
        ChonNamHan.setBounds(720, 160, 124, 30);

        BXemHan.setText("Xem thông tin");
        BXemHan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel2.add(BXemHan);
        BXemHan.setBounds(500, 210, 94, 40);

        ChonThangHan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel2.add(ChonThangHan);
        ChonThangHan.setBounds(390, 160, 130, 30);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 102));
        jLabel19.setText("ĐỘC GIẢ MƯỢN QUÁ HẠN");
        jPanel2.add(jLabel19);
        jLabel19.setBounds(442, 28, 275, 29);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Bảng chi tiết");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(160, 240, 70, 16);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/back.png"))); // NOI18N
        jButton10.setText("Quay lại");
        jButton10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10);
        jButton10.setBounds(120, 550, 98, 40);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/shutdown.png"))); // NOI18N
        jButton11.setText("Đăng xuất");
        jButton11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton11);
        jButton11.setBounds(1060, 550, 100, 40);

        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel2.add(jLabel20);
        jLabel20.setBounds(160, 270, 910, 250);

        jLabel24.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\thuvienduongdiem_12_6_2019\\database\\src\\Icon\\2397.jpg_wh1200.jpg")); // NOI18N
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 5));
        jPanel2.add(jLabel24);
        jLabel24.setBounds(0, 0, 1190, 640);

        jTabbedPane1.addTab("Danh sách độc giả mượn quá hạn", jPanel2);

        jPanel3.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Họ và tên");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(280, 100, 60, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Giới tính");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(280, 140, 60, 25);
        jPanel3.add(jLabel10);
        jLabel10.setBounds(12, 141, 0, 0);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Địa chỉ");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(280, 190, 60, 23);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Ngày sinh");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(630, 90, 59, 15);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Số điện thoại");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(630, 130, 82, 25);

        TableDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã độc giả", "Tên độc giả", "Giới tính", "Địa chỉ", "Ngày sinh", "Số điện thoại", "Đối tượng", "Lớp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TableDocGia);

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(140, 270, 860, 200);

        TextTen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        TextTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextTenActionPerformed(evt);
            }
        });
        jPanel3.add(TextTen);
        TextTen.setBounds(370, 90, 160, 30);

        TextGioiTinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.add(TextGioiTinh);
        TextGioiTinh.setBounds(370, 140, 160, 30);

        TextDiaChi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        TextDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextDiaChiActionPerformed(evt);
            }
        });
        jPanel3.add(TextDiaChi);
        TextDiaChi.setBounds(370, 190, 162, 30);

        DateNgaySinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.add(DateNgaySinh);
        DateNgaySinh.setBounds(740, 80, 142, 30);

        TextSDT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.add(TextSDT);
        TextSDT.setBounds(740, 120, 136, 30);

        BThemDocGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/thêm nhân viên.png"))); // NOI18N
        BThemDocGia.setText("Thêm");
        BThemDocGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        BThemDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BThemDocGiaActionPerformed(evt);
            }
        });
        jPanel3.add(BThemDocGia);
        BThemDocGia.setBounds(480, 540, 100, 36);

        BSuaDocGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/sửa nhân viên.png"))); // NOI18N
        BSuaDocGia.setText("Sửa");
        BSuaDocGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel3.add(BSuaDocGia);
        BSuaDocGia.setBounds(590, 540, 98, 36);

        BXoaDocGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Xóa nhân viên.png"))); // NOI18N
        BXoaDocGia.setText("Xóa");
        BXoaDocGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel3.add(BXoaDocGia);
        BXoaDocGia.setBounds(700, 540, 100, 36);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/shutdown.png"))); // NOI18N
        jButton8.setText("Đăng xuất");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton8);
        jButton8.setBounds(1060, 550, 100, 40);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/back.png"))); // NOI18N
        jButton9.setText("Quay lại");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton9);
        jButton9.setBounds(110, 530, 98, 40);

        CBBoxDoiTuong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CBBoxDoiTuong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.add(CBBoxDoiTuong);
        CBBoxDoiTuong.setBounds(730, 210, 87, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Đối tượng");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(640, 220, 63, 15);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Lớp");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(880, 220, 23, 15);

        CBBoxLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CBBoxLop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.add(CBBoxLop);
        CBBoxLop.setBounds(930, 210, 70, 30);

        BXemDocGia.setText("Xem Thông tin");
        BXemDocGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        BXemDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BXemDocGiaActionPerformed(evt);
            }
        });
        jPanel3.add(BXemDocGia);
        BXemDocGia.setBounds(360, 540, 110, 40);

        TextEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.add(TextEmail);
        TextEmail.setBounds(740, 160, 139, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Email");
        jPanel3.add(jLabel16);
        jLabel16.setBounds(630, 170, 31, 15);

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 102));
        jLabel17.setText("THÔNG TIN ĐỘC GIẢ");
        jPanel3.add(jLabel17);
        jLabel17.setBounds(471, 21, 221, 29);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Bảng chi tiết");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(120, 230, 70, 16);

        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel3.add(jLabel18);
        jLabel18.setBounds(130, 260, 890, 220);

        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jPanel3.add(jLabel23);
        jLabel23.setBounds(320, 520, 650, 70);

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 102, 102));
        jLabel25.setText("Chức năng");
        jPanel3.add(jLabel25);
        jLabel25.setBounds(390, 500, 80, 16);

        jButton3.setText("IN Thẻ Thư Viện");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(820, 540, 100, 36);

        jLabel26.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\thuvienduongdiem_12_6_2019\\database\\src\\Icon\\2397.jpg_wh1200.jpg")); // NOI18N
        jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 5));
        jPanel3.add(jLabel26);
        jLabel26.setBounds(0, 0, 1210, 620);

        jTabbedPane1.addTab("Thông tin độc giả", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1214, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextDiaChiActionPerformed

    private void TextTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextTenActionPerformed

    private void BXemMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BXemMuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BXemMuonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        new MenuThuThu().setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
          new MenuThuThu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
          System.exit(0);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          new MenuThuThu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // TODO add your handling code here:
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String strConn="jdbc:oracle:thin:@localhost:1521/orcl11g";
           conn=DriverManager.getConnection(strConn,"TRA","123456");
            if(conn!=null)
			{
				System.out.println("Kết nối tới Oracle thành công");
			}
			else
			{
				System.out.println("Kết nối tới Oracle thất bại");
			}
           String reportPath="C:\\Users\\Admin\\Desktop\\thuvienduongdiem_12_6_2019\\database\\src\\Report\\TheThuV.jrxml";
          HashMap pm= new HashMap();
          pm.put("Mathe",(String) this.TableDocGia.getValueAt(this.TableDocGia.getSelectedRow(), 0));
           JasperReport jr= JasperCompileManager.compileReport(reportPath);
           JasperPrint jp=JasperFillManager.fillReport(jr,pm,conn);
           JasperViewer.viewReport(jp,false);
           conn.close();
        }catch(Exception e){
            System.out.println(e.getMessage());
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void BXemDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BXemDocGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BXemDocGiaActionPerformed

    private void BThemDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BThemDocGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BThemDocGiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlidocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlidocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlidocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlidocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlidocgia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BSuaDocGia;
    private javax.swing.JButton BThemDocGia;
    private javax.swing.JButton BXemDocGia;
    private javax.swing.JButton BXemHan;
    private javax.swing.JButton BXemMuon;
    private javax.swing.JButton BXoaDocGia;
    private javax.swing.JComboBox<String> CBBoxDoiTuong;
    private javax.swing.JComboBox<String> CBBoxLop;
    private com.toedter.calendar.JDateChooser ChonDenNgayHan;
    private com.toedter.calendar.JYearChooser ChonNamHan;
    private com.toedter.calendar.JYearChooser ChonNamMuon;
    private com.toedter.calendar.JMonthChooser ChonThangHan;
    private com.toedter.calendar.JMonthChooser ChonThangMuon;
    private com.toedter.calendar.JDateChooser ChonTuNgayHan;
    private com.toedter.calendar.JDateChooser DateDenNgayMuon;
    private com.toedter.calendar.JDateChooser DateNgaySinh;
    private com.toedter.calendar.JDateChooser DateTuNgayMuon;
    private javax.swing.JRadioButton RadioThangNamHan;
    private javax.swing.JRadioButton RadioTuNgayHan;
    private javax.swing.JRadioButton RadioXemThangNam;
    private javax.swing.JRadioButton RadioXemTuNgay;
    private javax.swing.JTable Table;
    private javax.swing.JTable TableDocGia;
    private javax.swing.JTable TableHan;
    private javax.swing.JTextField TextDiaChi;
    private javax.swing.JTextField TextEmail;
    private javax.swing.JTextField TextGioiTinh;
    private javax.swing.JTextField TextSDT;
    private javax.swing.JTextField TextTen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

//    @Override
//    public void actionPerformed(ActionEvent e) {
//        if (e.getSource().equals(BXemMuon)) {
//            int temp=ChonKieuDuyet(this.RadioXemTuNgay.isSelected(), this.RadioXemThangNam.isSelected());
//            if ( temp== 1) {
//                if(CheckNgayThang(this.DateTuNgayMuon.getDate(),this.DateDenNgayMuon.getDate()))
//                this.Table.setModel(LayDocGiaMuonTheoNgay(this.DateTuNgayMuon.getDate(), this.DateDenNgayMuon.getDate()));
//            } else {
//                if (temp == 2) {
//                    this.Table.setModel(LayDocGiaMuonTheoThang(this.ChonThangMuon.getMonth(), this.ChonNamMuon.getYear()));
//                }
//            }
////            try {
////                if (this.RadioXemTuNgay.isSelected() && this.RadioXemThangNam.isSelected() == false) {
////                    String tungay, denngay;
////                    java.sql.Date dtungay, ddenngay;
////                    dtungay = new java.sql.Date(this.DateTuNgayMuon.getDate().getTime());
////                    ddenngay = new java.sql.Date(this.DateDenNgayMuon.getDate().getTime());
////                    DateFormat dateFormat = new SimpleDateFormat("dd-MM-YYYY");
////                    tungay = dateFormat.format(dtungay);
////                    denngay = dateFormat.format(ddenngay);
////                    System.out.println(tungay + "   " + denngay);
////                    String sql1 = "SELECT DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN FROM DOCGIA JOIN THETHUVIEN ON THETHUVIEN.MADOCGIA=DOCGIA.MADOCGIA JOIN QTMUON ON QTMUON.MADOCGIA=DOCGIA.MADOCGIA where ngaymuon <= TO_DATE('" + denngay + "','dd-MM-YYYY') and ngaymuon >= TO_DATE('" + tungay + "','dd-MM-YYYY') GROUP BY DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN";
////                    DefaultTableModel model = new DefaultTableModel();
////                    String[] ar = {"stt", "Mã thẻ", "Mã độc giả", "tên độc giả", "Số sách đã mượn"};
////                    Object[] temp = new Object[5];
////                    int i = 1;
////                    model.setColumnIdentifiers(ar);
////                    ResultSet rs = getData(conectionJDBC(), sql1);
////                    try {
////                        while (rs.next()) {
////                            temp[0] = i;
////                            i++;
////                            temp[1] = rs.getString("MATHE");
////                            temp[2] = rs.getString("MADOCGIA");
////                            temp[3] = rs.getString("TEN");
////                            String sql2 = "select count(*) from qtmuon where ngaymuon <= TO_DATE('" + denngay + "','dd-MM-YYYY') and ngaymuon >= TO_DATE('" + tungay + "','dd-MM-YYYY') group by madocgia having madocgia='" + temp[2] + "'";
////                            ResultSet rss = getData(conectionJDBC(), sql2);
////                            while (rss.next()) {
////                                temp[4] = rss.getInt(1);
////                            }
////                            model.addRow(temp);
////                        }
////                    } catch (SQLException ex) {
////                        Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////                    }
////                    this.Table.setModel(model);
////                }
////            } catch (NullPointerException ex) {
////                JOptionPane.showMessageDialog(null, "khong duoc de ngay than trong");
////            }
////            if (this.RadioXemThangNam.isSelected() && this.RadioXemTuNgay.isSelected() == false) {
////
////                int thang = this.ChonThangMuon.getMonth();
////                int nam = this.ChonNamMuon.getYear();
////                String sql1 = "SELECT DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN FROM DOCGIA JOIN THETHUVIEN ON THETHUVIEN.MADOCGIA=DOCGIA.MADOCGIA JOIN QTMUON ON QTMUON.MADOCGIA=DOCGIA.MADOCGIA where EXTRACT(MONTH FROM ngaymuon) =" + thang + " and EXTRACT(YEAR FROM ngaymuon) = " + nam + " GROUP BY DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN";
////                DefaultTableModel model = new DefaultTableModel();
////                String[] ar = {"stt", "Mã thẻ", "Mã độc giả", "tên độc giả", "Số sách đã mượn"};
////                Object[] temp = new Object[5];
////                int i = 1;
////                model.setColumnIdentifiers(ar);
////                ResultSet rs = getData(conectionJDBC(), sql1);
////                try {
////                    while (rs.next()) {
////                        temp[0] = i;
////                        i++;
////                        temp[1] = rs.getString("MATHE");
////                        temp[2] = rs.getString("MADOCGIA");
////                        temp[3] = rs.getString("TEN");
////                        String sql2 = "select count(*) from qtmuon where EXTRACT(MONTH FROM ngaymuon) =" + thang + " and EXTRACT(YEAR FROM ngaymuon) = " + nam + " group by madocgia having madocgia='" + temp[2] + "'";
////                        ResultSet rss = getData(conectionJDBC(), sql2);
////                        while (rss.next()) {
////                            temp[4] = rss.getInt(1);
////                        }
////                        model.addRow(temp);
////                    }
////                } catch (SQLException ex) {
////                    Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////                }
////                this.Table.setModel(model);
////            }
////            if (this.RadioXemTuNgay.isSelected() && this.RadioXemThangNam.isSelected()) {
////                JOptionPane.showMessageDialog(null, "vui long chi chon 1 kieu duyet");
////            }
////            if (!this.RadioXemTuNgay.isSelected() && !this.RadioXemThangNam.isSelected()) {
////                JOptionPane.showMessageDialog(null, "vui long chon 1 kieu duyet");
////            }
//        }
//
//        if (e.getSource().equals(BXemHan)) {
//            int temp=ChonKieuDuyet(this.RadioTuNgayHan.isSelected(), this.RadioThangNamHan.isSelected());
//            if ( temp== 1) {
//                if(CheckNgayThang(this.ChonTuNgayHan.getDate(),this.ChonDenNgayHan.getDate()))
//                this.TableHan.setModel(LayDocGiaHanTheoNgay(this.ChonTuNgayHan.getDate(), this.ChonDenNgayHan.getDate()));
//            } else {
//                if (temp == 2) {
//                    this.TableHan.setModel(LayDocGiaHanTheoThang(this.ChonThangHan.getMonth(), this.ChonNamHan.getYear()));
//                }
//            }
////            try {
////                if (this.RadioTuNgayHan.isSelected() && this.RadioThangNamHan.isSelected() == false) {
////                    String tungay, denngay;
////                    java.sql.Date dtungay, ddenngay;
////                    dtungay = new java.sql.Date(this.ChonTuNgayHan.getDate().getTime());
////                    ddenngay = new java.sql.Date(this.ChonDenNgayHan.getDate().getTime());
////                    DateFormat dateFormat = new SimpleDateFormat("dd-MM-YYYY");
////                    tungay = dateFormat.format(dtungay);
////                    denngay = dateFormat.format(ddenngay);
////                    System.out.println(tungay + "   " + denngay);
////                    String sql1 = "SELECT DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN FROM DOCGIA JOIN THETHUVIEN ON THETHUVIEN.MADOCGIA=DOCGIA.MADOCGIA JOIN QTMUON ON QTMUON.MADOCGIA=DOCGIA.MADOCGIA where ngaymuon <= TO_DATE('" + denngay + "','dd-MM-YYYY') and ngaymuon >= TO_DATE('" + tungay + "','dd-MM-YYYY') and NGAYTRA is null GROUP BY DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN";
////                    DefaultTableModel model = new DefaultTableModel();
////                    String[] ar = {"stt", "Mã thẻ", "Mã độc giả", "tên độc giả", "Số sách quá hạn"};
////                    Object[] temp = new Object[5];
////                    int i = 1;
////                    model.setColumnIdentifiers(ar);
////                    ResultSet rs = getData(conectionJDBC(), sql1);
////                    try {
////                        while (rs.next()) {
////                            temp[0] = i;
////                            i++;
////                            temp[1] = rs.getString("MATHE");
////                            temp[2] = rs.getString("MADOCGIA");
////                            temp[3] = rs.getString("TEN");
////                            String sql2 = "select count(*) from qtmuon where ngaymuon <= TO_DATE('" + denngay + "','dd-MM-YYYY') and ngaymuon >= TO_DATE('" + tungay + "','dd-MM-YYYY') and NGAYTRA is null group by madocgia having madocgia='" + temp[2] + "'";
////                            ResultSet rss = getData(conectionJDBC(), sql2);
////                            while (rss.next()) {
////                                temp[4] = rss.getInt(1);
////                            }
////                            model.addRow(temp);
////                        }
////                    } catch (SQLException ex) {
////                        Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////                    }
////                    this.TableHan.setModel(model);
////                }
////            } catch (NullPointerException ex) {
////                JOptionPane.showMessageDialog(null, "khong duoc de ngay thang trong");
////            }
////            if (this.RadioThangNamHan.isSelected() && this.RadioTuNgayHan.isSelected() == false) {
////                int thang = this.ChonThangHan.getMonth();
////                int nam = this.ChonNamHan.getYear();
////                thang++;// vì khi lấy giá trị từ ô tháng giá trị luôn <1 so với cái mình chọn vd:april=3
////                System.out.println(thang + "-" + nam);
////                String sql1 = "SELECT DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN FROM DOCGIA JOIN THETHUVIEN ON THETHUVIEN.MADOCGIA=DOCGIA.MADOCGIA JOIN QTMUON ON QTMUON.MADOCGIA=DOCGIA.MADOCGIA where EXTRACT(MONTH FROM ngaymuon) =" + thang + " and EXTRACT(YEAR FROM ngaymuon) = " + nam + " and NGAYTRA IS NULL GROUP BY DOCGIA.MADOCGIA,THETHUVIEN.MATHE,DOCGIA.TEN";
////                DefaultTableModel model = new DefaultTableModel();
////                String[] ar = {"stt", "Mã thẻ", "Mã độc giả", "Tên độc giả", "Số lượng sách quá hạn"};
////                Object[] temp = new Object[5];
////                int i = 1;
////                model.setColumnIdentifiers(ar);
////                ResultSet rs = getData(conectionJDBC(), sql1);
////                try {
////                    while (rs.next()) {
////                        temp[0] = i;
////                        i++;
////                        temp[1] = rs.getString("MATHE");
////                        temp[2] = rs.getString("MADOCGIA");
////                        temp[3] = rs.getString("TEN");
////                        String sql2 = "select count(*) from qtmuon where EXTRACT(MONTH FROM ngaymuon) =" + thang + " and EXTRACT(YEAR FROM ngaymuon) = " + nam + " and NGAYTRA IS NULL group by madocgia having madocgia='" + temp[2] + "'";
////                        ResultSet rss = getData(conectionJDBC(), sql2);
////                        while (rss.next()) {
////                            temp[4] = rss.getInt(1);
////                        }
////                        model.addRow(temp);
////                    }
////                } catch (SQLException ex) {
////                    Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////                }
////                this.TableHan.setModel(model);
////            }
////            if (this.RadioTuNgayHan.isSelected() && this.RadioThangNamHan.isSelected()) {
////                JOptionPane.showMessageDialog(null, "vui lòng chỉ chọn 1 kiểu duyệt");
////            }
////            if (!this.RadioThangNamHan.isSelected() && !this.RadioTuNgayHan.isSelected()) {
////                JOptionPane.showMessageDialog(null, "vui lòng chọn 1 kiểu duyệt");
////            }
//        }
//        if (e.getSource().equals(BXoaDocGia)) {
//            int index = this.TableDocGia.getSelectedRow();
//            DefaultTableModel modelxoa = (DefaultTableModel) this.TableDocGia.getModel();
//            String ma = (String) modelxoa.getValueAt(index, 0);
//            modelxoa.removeRow(index);
//            this.TableDocGia.setModel(modelxoa);
//            XoaDG(ma);
////            String sqlcall = "{call XOA_DOCGIA(?)}";
////            try {
////                CallableStatement cast = (conectionJDBC()).prepareCall(sqlcall);
////                cast.setString(1, ma);
////                cast.execute();
////            } catch (SQLException ex) {
////                Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////            }
//            this.BSuaDocGia.setEnabled(false);
//            this.BXoaDocGia.setEnabled(false);
//
//        }
//        if (e.getSource().equals(BXemDocGia)) {
//            int index = this.TableDocGia.getSelectedRow();
//            this.BSuaDocGia.setEnabled(true);
//            this.TextGioiTinh.setEditable(false);
//            String[] temp = new String[9];
//            for (int i = 0; i < 9; i++) {
//                temp[i] = (String) this.TableDocGia.getModel().getValueAt(index, i);
//            }
//            this.TextTen.setText(temp[1]);
//            this.TextGioiTinh.setText(temp[3]);
//            this.TextDiaChi.setText(temp[4]);
//            this.TextSDT.setText(temp[6]);
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//            // set formatter to use UTC (instead of JVM default timezone)
//            sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
//            try {
//                // parse it as midnight (no shift to 01:00)
//                java.util.Date date = sdf.parse(temp[5]);
//                java.util.Date dateutil = new java.util.Date(date.getTime());
//                this.DateNgaySinh.setDate(dateutil);
//            } catch (ParseException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            this.CBBoxDoiTuong.setSelectedItem(temp[7]);
//            this.CBBoxLop.setSelectedItem(temp[8]);
//            this.BXoaDocGia.setEnabled(true);
//        }
//        if (e.getSource().equals(BSuaDocGia)) {
//            int index = this.TableDocGia.getSelectedRow();
//            Mquanlidocgia.SuaDG((String)this.TableDocGia.getValueAt(index, 0), this.TextTen.getText(), this.TextGioiTinh.getText(), this.TextDiaChi.getText(), this.TextSDT.getText(), this.DateNgaySinh.getDate(), (String)this.CBBoxDoiTuong.getSelectedItem(),(String) this.CBBoxLop.getSelectedItem());
//           // Mquanlidocgia.SuaDG((String)this.TableDocGia.getValueAt(index, 0), this.TextTen.getText(), this.TextGioiTinh.getText(), this.TextDiaChi.getText(), this.TextSDT.getText(), this.DateNgaySinh.getDate(), (String)this.CBBoxDoiTuong.getSelectedItem(),(String) this.CBBoxLop.getSelectedItem());
////            String sqlupdate = "UPDATE DOCGIA SET TEN=?, GIOITINH=?, DIACHI=?, SDT=?, NGAYSINH=TO_DATE(?,'dd-MM-yyyy'), DOITUONG=?, LOP=? WHERE MADOCGIA='" + this.TableDocGia.getModel().getValueAt(index, 0) + "'";
////            try {
////                PreparedStatement update = conectionJDBC().prepareStatement(sqlupdate);
////                update.setString(1, this.TextTen.getText());
////                update.setString(2, this.TextGioiTinh.getText());
////                update.setString(3, this.TextDiaChi.getText());
////                update.setString(4, this.TextSDT.getText());
////                String strDate = new SimpleDateFormat("dd-MM-yyyy").format(new java.sql.Date((this.DateNgaySinh.getDate()).getTime()));
////                update.setString(5, strDate);
////                update.setString(6, (String) this.CBBoxDoiTuong.getSelectedItem());
////                update.setString(7, (String) this.CBBoxLop.getSelectedItem());
////                if ((this.CBBoxDoiTuong.getSelectedItem()).equals("Giao vien")) {
////                    update.setString(7, null);
////                }
////                update.execute();
////                JOptionPane.showMessageDialog(null, "cập nhật độc giả thành công");
////                this.setDefaultDocgia();
////            } catch (SQLException ex) {
////                JOptionPane.showMessageDialog(null, "dữ liệu để cập nhật độc giả có lỗi");
////                Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////            }
//            this.TableDocGia.setModel(setDefaultDocgia());
//            this.BSuaDocGia.setEnabled(false);
//            this.BXoaDocGia.setEnabled(false);
//        }
//        if (e.getSource().equals(BThemDocGia)) {
//            this.TableDocGia.getSelectionModel().clearSelection();
//            Mquanlidocgia.ThemDG(this.TextTen.getText(), this.DateNgaySinh.getDate(), this.TextSDT.getText(), this.TextDiaChi.getText(), (String) this.CBBoxLop.getSelectedItem(),(String) this.CBBoxDoiTuong.getSelectedItem(), this.TextGioiTinh.getText());
////            String sql = "{call ADD_DOCGIA(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
////            String user = TaoTenTKDocGia();
////            String mathe = TaoMaTheThuVien();
////            String strDate = new SimpleDateFormat("dd-MM-yyyy").format(new java.sql.Date((this.DateNgaySinh.getDate()).getTime()));
////            CallableStatement cst;
////            System.out.println(strDate);
////            try {
////                cst = conectionJDBC().prepareCall(sql);
////                cst.setString(1, user);
////                cst.setString(2, user);
////                cst.setString(3, "doc gia");
////                cst.setString(4, user);
////                cst.setString(5, this.TextTen.getText());
////                cst.setString(6, strDate);
////                cst.setString(7, this.TextSDT.getText());
////                cst.setString(8, this.TextDiaChi.getText());
////                if ((this.CBBoxDoiTuong.getSelectedItem()).equals("Giao vien")) {
////                    cst.setString(9, null);
////                } else {
////                    cst.setInt(9, Integer.parseInt((String) this.CBBoxLop.getSelectedItem()));
////                }
////                cst.setString(10, (String) this.CBBoxDoiTuong.getSelectedItem());
////                cst.setString(11, this.TextGioiTinh.getText());
////                cst.setString(12, mathe);
////                cst.setString(13, mathe);
////                cst.setString(14, user);
////                cst.setString(15, null);
////                cst.execute();
////                JOptionPane.showMessageDialog(null, "Thêm độc giả thành công");
////                this.setDefaultDocgia();
////            } catch (SQLException ex) {
////                Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////            }
//this.TableDocGia.setModel(setDefaultDocgia());
//        }
//    }
    public void setDefaultDocgia() {
        DefaultTableModel model = (DefaultTableModel) new DefaultTableModel();
        ArrayList<DocGiaDTO> ar = new ArrayList<DocGiaDTO>();
        QuanLiDocGiaBLL ql = new QuanLiDocGiaBLL();
        ar = ql.getAllDocGia();
        String[] title = {"Mã đôc giả", "Tên đôc giả", "Giới tính", "Địa chỉ", "Ngày sinh", "Số điện thoại", "Đối tượng", "lớp","Email"};
        model.setColumnIdentifiers(title);
        for (int i = 0; i < ar.size(); i++) {
            DocGiaDTO temp = ar.get(i);
            String ma = temp.getMaDG();
            String ten = temp.getTenDG();
         //   String mathe = temp.getMaThe();
            String gioitinh = temp.getGioiTinh();
            String diachi = temp.getDiaChi();
            String ngaysinh = temp.getNgaySinhDG();
            String sdt = temp.getSDT();
            String doituong = temp.getDoiTuong();
            String lop = temp.getLop();
            String email=temp.getEmail();
            String[] row = {ma, ten,  gioitinh, diachi, ngaysinh, sdt, doituong, lop,email};
            model.addRow(row);
        }
        this.TableDocGia.setModel(model);
    }

//    @Override
//    public void itemStateChanged(ItemEvent ie) {
//        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        if (ie.getStateChange() == ItemEvent.SELECTED) {
//            JComboBox localCombo = (JComboBox) ie.getSource();
//            if (localCombo.getSelectedItem().toString().equals("Hoc sinh")) {
//                this.CBBoxLop.setEnabled(true);
//            } else {
//                this.CBBoxLop.setEnabled(false);
//            }
//        }
//    }
//
//    @Override
//    public void valueChanged(ListSelectionEvent lse) {
////        int index = this.TableDocGia.getSelectedRow();
////        String[] temp=new String[9];
////        for(int i=0;i<9;i++){
////            temp[i]=(String)this.TableDocGia.getModel().getValueAt(index, i);
////        }
////        this.TextTen.setText(temp[1]);
////        this.TextGioiTinh.setText(temp[3]);
////        this.TextDiaChi.setText(temp[4]);
////        this.TextSDT.setText(temp[6]);
////        System.out.println(temp[5]);
////        String datee=temp[5].substring(0,10);
////        try {
////            System.out.println(new SimpleDateFormat("dd-MM-yyyy").parse(datee));
////            java.util.Date date=new java.util.Date(new SimpleDateFormat("dd-MM-yyyy").parse(datee).getTime());
////           // SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
////           System.out.println(date);
////            this.DateNgaySinh.setDate(date);
////            //System.out.println(this.DateNgaySinh.getDate());
////        } catch (ParseException ex) {
////            Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////        }
////        this.CBBoxDoiTuong.setSelectedItem(temp[7]);
////        this.CBBoxLop.setSelectedItem(temp[8]);
//    }
//
////    public static String TaoTenTKDocGia() {
////        int dem = 1;
////        Vector<String> v = new Vector<String>();
////        String sql = "select MADOCGIA FROM DOCGIA", temp = "";
////        ResultSet rs = getData(conectionJDBC(), sql);
////        try {
////            while (rs.next()) {
////                v.add(rs.getString("MADOCGIA"));
////            }
////            Collections.sort(v);
////            for (int i = 0; i < v.size(); i++) {
////                System.out.print(v.get(i) + " ");
////            }
////            if (dem >= v.size()) {
////                temp += String.valueOf(StringToInt(v.get(v.size() - 1)) + 1);
////            } else {
////                for (int i = 0; i < v.size() - 1; i++) {
////                    if (StringToInt(v.get(i + 1)) - StringToInt(v.get(i)) > 1) {
////                        //System.out.println(StringToInt(v.get(i)) + 1);
////                        temp += String.valueOf(StringToInt(v.get(i)) + 1);
////                        break;
////                    } else {
////                        dem++;
////                    }
////                }
////                System.out.println("dem:" + dem);
////            }
////            if (dem >= v.size()) {
//////                temp += String.valueOf(StringToInt(v.get(v.size() - 1)) + 1);
////                temp += String.valueOf(dem + 1);
////            }
////            //System.out.println(StringToInt(v.get(v.size()-1)) + 1);
////            System.out.println("temp:" + temp);
////            if (Integer.parseInt(temp) < 10) {
////                temp = "DG00" + temp;
////            } else if (Integer.parseInt(temp) >= 10 && Integer.parseInt(temp) < 100) {
////                temp = "DG0" + temp;
////            } else if (Integer.parseInt(temp) >= 100) {
////                temp = "DG" + temp;
////            }
////        } catch (SQLException ex) {
////            Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////        }
////        return temp;
////    }
//
//
////    public static String TaoMaTheThuVien() {
////        int dem = 1;
////        Vector<String> v = new Vector<String>();
////        String sql = "select MATHE FROM THETHUVIEN", temp = "";
////        ResultSet rs = getData(conectionJDBC(), sql);
////        try {
////            while (rs.next()) {
////                v.add(rs.getString("MATHE"));
////            }
////            Collections.sort(v);
////            for (int i = 0; i < v.size(); i++) {
////                System.out.print(v.get(i) + " ");
////            }
////            if (dem >= v.size()) {
////                temp += String.valueOf(StringToInt(v.get(v.size() - 1)) + 1);
////            } else {
////                for (int i = 0; i < v.size() - 1; i++) {
////                    if (StringToInt(v.get(i + 1)) - StringToInt(v.get(i)) > 1) {
////                        temp += String.valueOf(StringToInt(v.get(i)) + 1);
////                        break;
////                    } else {
////                        dem++;
////                    }
////
////                }
////            }
////            System.out.println("dem:" + dem);
////            if (dem >= v.size()) {
////                // temp += String.valueOf(StringToInt(v.get(v.size() - 1)) + 1);
////                temp += String.valueOf(dem + 1);
////            }
////            System.out.println("temp:" + temp);
////            if (Integer.parseInt(temp) < 10) {
////                temp = "0000" + temp;
////            } else if (Integer.parseInt(temp) >= 10 && Integer.parseInt(temp) < 100) {
////                temp = "000" + temp;
////            } else if (Integer.parseInt(temp) >= 100) {
////                temp = "00" + temp;
////            }
////        } catch (SQLException ex) {
////            Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
////        }
////        return temp;
////    }
    @Override
    public void actionPerformed(ActionEvent ae) {

        if (ae.getSource().equals(BXemMuon)) {

            switch (ChonKieuDuyet(this.RadioXemTuNgay.isSelected(), this.RadioXemThangNam.isSelected())) {
                case 1: {
                    if (this.DateTuNgayMuon.getDate() == null || this.DateDenNgayMuon.getDate() == null) {
                        JOptionPane.showMessageDialog(null, "Nhập thiếu ngày");
                        return;
                    }
                    DefaultTableModel model = new DefaultTableModel();
                    String[] ar = {"stt", "Mã độc giả", "tên độc giả", "Số sách đã mượn"};
                    model.setColumnIdentifiers(ar);
                    MuonSachBLL dsmuonbll = new MuonSachBLL();
                    ArrayList<DSMuonSachDTO> ds = dsmuonbll.getTheoNgay(this.DateTuNgayMuon.getDate(), this.DateDenNgayMuon.getDate());
                    for (int i = 0; i < ds.size(); i++) {
                        DSMuonSachDTO temp = ds.get(i);;
                        
                        int stt = temp.getStt();
                      //  String mathe = temp.getMathe();
                        String madg = temp.getMadocgia();
                        String ten = temp.getTenDG();
                        int sosach = temp.getSoSachMuon();
                        Object[] arr = {stt, /*mathe,*/ madg, ten, sosach};
                        model.addRow(arr);
                    }
                    this.Table.setModel(model);
                }
                case 2: {
                    DefaultTableModel model = new DefaultTableModel();
                    String[] ar = {"stt",  "Mã độc giả", "tên độc giả", "Số sách đã mượn"};
                    model.setColumnIdentifiers(ar);
                    MuonSachBLL dsmuonbll = new MuonSachBLL();
                    ArrayList<DSMuonSachDTO> ds = dsmuonbll.getTheoThang(this.ChonThangMuon.getMonth(), this.ChonNamMuon.getYear());
                    for (int i = 0; i < ds.size(); i++) {
                        DSMuonSachDTO temp = ds.get(i);
                        int stt = temp.getStt();
                       // String mathe = temp.getMathe();
                        String madg = temp.getMadocgia();
                        String ten = temp.getTenDG();
                        int sosach = temp.getSoSachMuon();
                        Object[] arr = {stt, madg, ten, sosach};
                        model.addRow(arr);
                    }
                    this.Table.setModel(model);
                }
            }
        }
        if (ae.getSource().equals(BXemHan)) {
            switch (ChonKieuDuyet(this.RadioTuNgayHan.isSelected(), this.RadioThangNamHan.isSelected())) {
                case 1: {
                    if (this.ChonTuNgayHan.getDate() == null || this.ChonDenNgayHan.getDate() == null) {
                        JOptionPane.showMessageDialog(null, "Nhập thiếu ngày");
                        return;
                    }
                    DefaultTableModel model = new DefaultTableModel();
                    String[] ar = {"STT", "Mã độc giả", "Tên độc giả", "Số sách quá hạn"};
                    model.setColumnIdentifiers(ar);
                    DSQuaHanBLL dsquahanbll = new DSQuaHanBLL();
                    ArrayList<DSQuaHanDTO> ds = dsquahanbll.getTheoNgayHan(this.ChonTuNgayHan.getDate(), this.ChonDenNgayHan.getDate());
                    System.out.println("số lượng phần tử:"+ds.size());
                    for (int i = 0; i < ds.size(); i++) {
                        DSQuaHanDTO temp = ds.get(i);
                        int stt = temp.getStt();
                       // String mathe = temp.getMathe();
                        String madg = temp.getMadocgia();
                        String ten = temp.getTenDG();
                        int sosach = temp.getSoSachQuaHan();
                        Object[] arr = {stt, madg, ten, sosach};
                        model.addRow(arr);
                    }
                    this.TableHan.setModel(model);
                    break;
                }
                case 2: {
                    DefaultTableModel model = new DefaultTableModel();
                    String[] ar = {"STT", /*"Mã thẻ", /*/"Mã độc giả", "Tên độc giả", "Số sách quá hạn"};
                    model.setColumnIdentifiers(ar);
                    DSQuaHanBLL dsquahanbll = new DSQuaHanBLL();
                    ArrayList<DSQuaHanDTO> ds = dsquahanbll.getTheoThangHan(this.ChonThangHan.getMonth(), this.ChonNamHan.getYear());
                    for (int i = 0; i < ds.size(); i++) {
                        DSQuaHanDTO temp = ds.get(i);
                        int stt = temp.getStt();
                       // String mathe = temp.getMathe();
                        String madg = temp.getMadocgia();
                        String ten = temp.getTenDG();
                        int sosach = temp.getSoSachQuaHan();
                        Object[] arr = {stt, /*mathe,*/ madg, ten, sosach};
                        model.addRow(arr);
                    }
                    this.TableHan.setModel(model);
                    break;
                }
            }
        }
        if(ae.getSource().equals(BThemDocGia)){
            DocGiaBLL dg=new DocGiaBLL();
            String madg=Database.TaoMa("docgia");
            String strDate = new SimpleDateFormat("dd-MM-yyyy").format(new java.sql.Date(this.DateNgaySinh.getDate().getTime()));
            dg.ThemDocGia(new DocGiaDTO(madg, this.TextTen.getText(), strDate, this.TextSDT.getText(), this.TextDiaChi.getText(),(String) this.CBBoxLop.getSelectedItem(), (String)this.CBBoxDoiTuong.getSelectedItem(), this.TextGioiTinh.getText(),this.TextEmail.getText()), new TaiKhoanDTO(madg, madg, "docgia"), new TheThuVienDTO( madg, "", "", ""));
            this.setDefaultDocgia();
        }
        if(ae.getSource().equals(BXoaDocGia)){
            DocGiaBLL dg=new DocGiaBLL();
            dg.XoaDocGia((String) this.TableDocGia.getValueAt(this.TableDocGia.getSelectedRow(), 0));
            this.setDefaultDocgia();
        }
        if(ae.getSource().equals(BSuaDocGia)){
            DocGiaBLL dg=new DocGiaBLL();
            String strDate = new SimpleDateFormat("dd-MM-yyyy").format(new java.sql.Date(this.DateNgaySinh.getDate().getTime()));
            dg.SuaDocGia(new DocGiaDTO(null, this.TextTen.getText(), strDate, this.TextSDT.getText(), this.TextDiaChi.getText(),(String) this.CBBoxLop.getSelectedItem(), (String)this.CBBoxDoiTuong.getSelectedItem(), this.TextGioiTinh.getText(), this.TextEmail.getText()), (String) this.TableDocGia.getValueAt(this.TableDocGia.getSelectedRow(), 0));
            this.setDefaultDocgia();
        }
        if(ae.getSource().equals(BXemDocGia)){
             int index = this.TableDocGia.getSelectedRow();
            this.BSuaDocGia.setEnabled(true);
            this.TextGioiTinh.setEditable(false);
            String[] temp = new String[9];
            for (int i = 0; i < 9; i++) {
                temp[i] = (String) this.TableDocGia.getModel().getValueAt(index, i);
            }
            this.TextTen.setText(temp[1]);
            this.TextGioiTinh.setText(temp[2]);
            this.TextDiaChi.setText(temp[3]);
            this.TextSDT.setText(temp[5]);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            // set formatter to use UTC (instead of JVM default timezone)
            sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
            try {
                // parse it as midnight (no shift to 01:00)
                java.util.Date date = sdf.parse(temp[4]);
                java.util.Date dateutil = new java.util.Date(date.getTime());
                this.DateNgaySinh.setDate(dateutil);
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            this.CBBoxDoiTuong.setSelectedItem(temp[6]);
            this.CBBoxLop.setSelectedItem(temp[7]);
            this.BXoaDocGia.setEnabled(true);
        }
    }

    @Override
    public void itemStateChanged(ItemEvent ie) {
        if (ie.getStateChange() == ItemEvent.SELECTED) {
            JComboBox localCombo = (JComboBox) ie.getSource();
            if (localCombo.getSelectedItem().toString().equals("Hoc sinh")) {
                this.CBBoxLop.setEnabled(true);
            } else {
                this.CBBoxLop.setEnabled(false);
            }
        }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void valueChanged(ListSelectionEvent lse) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public static int ChonKieuDuyet(boolean bl1, boolean bl2) {
        if (bl1 && bl2) {
            JOptionPane.showMessageDialog(null, "Chỉ được chọn 1 kiểu duyệt");
            return 0;
        } else {
            if (!bl1 && !bl2) {
                JOptionPane.showMessageDialog(null, "Phải chọn 1 kiểu duyệt");
                return 0;
            } else {
                if (bl1 && !bl2) {
                    return 1;
                } else {
                    return 2;
                }
            }

        }

    }
}
